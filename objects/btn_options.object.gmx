<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_btn</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_btn</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
event_inherited();
text = "options";
//stuff
active = 0;
cooldown = 0;
guifade = 0;
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///record
if active{
    if keyboard_check_pressed(vk_escape){
        cooldown = 5;
        active = 0;
    }
    
}
//cooldown
cooldown--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active){
    var vz = obj_view.view_zoom;
    var xx = (mouse_x-view_xview)*vz;
    var yy = (mouse_y-view_yview)*vz;
    var vw = view_wview*obj_view.view_zoom;
    var vh = view_hview*obj_view.view_zoom;
    var y1 = vh*.5-15;
    var y2 = vh*.5;
    var y3 = vh*.5+15;
    var sc = 1;
    var act = 0;
    if distance(0,yy,0,y1)&lt;8*sc{
        //fullscreen
        if xx&gt;vw*.5 || xx&lt;vw*.5{
            window_set_fullscreen(!window_get_fullscreen())
        }
        act = 1;
        cooldown = 5;
    }
    if distance(0,yy,0,y2)&lt;8*sc{
        act = 1;
        cooldown = 5;
        //display
        with (obj_display){
            if xx&lt;vw*.5{
                if window_scale&gt;1{
                    window_scale--;
                    alarm[0] = 1;
                }
                //update layers
                surface_resize(application_surface,ideal_width,ideal_height);
                display_set_gui_size(ideal_width,ideal_height);
                window_set_size(ideal_width*window_scale,ideal_height*window_scale);
            }
            if xx&gt;vw*.5{
                if ((window_scale+1)*ideal_width&lt;display_get_width()){
                    window_scale++;
                    alarm[0] = 1;
                }
                //update layers
                surface_resize(application_surface,ideal_width,ideal_height);
                display_set_gui_size(ideal_width,ideal_height);
                window_set_size(ideal_width*window_scale,ideal_height*window_scale);
            }
        }
    }
    if distance(0,yy,0,y3)&lt;8*sc{
        //volume
        if xx&lt;vw*.5{global.maxvol-=.01}
        if xx&gt;vw*.5{global.maxvol+=.01}
        global.maxvol = clamp(global.maxvol,0,1)
        act = 1;
        cooldown = 5;
    }
    if (act == 0 &amp;&amp; cooldown &lt;= 0){
        active = 0;
        cooldown = 5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///activate
if active==0{
    active = 1;
    cooldown = 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
if(active){
    if guifade&lt;1{guifade = lerp(guifade,1,.1)}
    ///vars
    var vw = view_wview*obj_view.view_zoom;
    var vh = view_hview*obj_view.view_zoom;
    var sc = 1;
    var p1 = "";
    if !window_get_fullscreen(){
        p1 = "&lt; windowed &gt;";
        p2 = "&lt; display size &gt;";
    }else{
        p1 = "&lt; fullscreen &gt;";
        p2 = "display size: max"
    }
    p3 = "&lt; volume:"+string(floor(global.maxvol*100))+" &gt;";
    ///background
    draw_set_color(c_black);
    draw_set_alpha(.5*guifade);
    draw_rectangle(-8,-8,(vw)+8,(vh)+8,false);
    ///prompt
    text_draw(vw*.5-text_length(p1,spr_font_a,sc)*.5,vh*.5-15,p1,spr_font_a,c_white,sc,1*guifade,false);
    text_draw(vw*.5-text_length(p2,spr_font_a,sc)*.5,vh*.5,p2,spr_font_a,c_white,sc,1*guifade,false);
    text_draw(vw*.5-text_length(p3,spr_font_a,sc)*.5,vh*.5+15,p3,spr_font_a,c_white,sc,1*guifade,false);
}else{
    if guifade&gt;0{guifade = lerp(guifade,0,.1)}
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
