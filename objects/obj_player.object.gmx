<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hazmat_run</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
//references
wp_name = 0;
wp_weapontype = 4;
wp_maxammo = 1;
wp_ammotype = 2;
wp_speed = 3;
//weapon array
weapon[0,wp_name] = "test gun";
weapon[0,wp_maxammo] = 20;
weapon[0,wp_ammotype] = obj_bullet;
weapon[0,wp_weapontype] = spr_testgun;
weapon[0,wp_speed] = 10;
//vars
gun = 0;
ammo = weapon[gun,wp_maxammo];
hp = 10;
dead = 0;
//motion
spdlerp = .1;
frclerp = .2;
spdmax = 2;
hspd = 0;
vspd = 0;
gun_dir = 0;
shoot = 0;
ftat = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///gun cooldown
shoot = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move
if !dead{
    var idle = 0;
    if (room == rm_lobby) &amp;&amp; (instance_exists(btn_joinGame)) &amp;&amp; (btn_joinGame.active){idle =1;}
    if !idle{
        var ud = (keyboard_check(ord("S")) || keyboard_check(vk_down))-(keyboard_check(ord("W")) || keyboard_check(vk_up));
        var lr = (keyboard_check(ord("D")) || keyboard_check(vk_right))-(keyboard_check(ord("A")) || keyboard_check(vk_left));
    }else{
        ud = 0;
        lr = 0;
    }
    var hsp = lr*spdmax;
    var vsp = ud*spdmax;
}else{
    hsp = 0;
    vsp = 0;
}
//hspeed
if abs(hsp) != 0{
    //if moving, speed buildup
    hspd = lerp(hspd,hsp,spdlerp);
    image_xscale = sign(hspd);
}else{
    //if stopping, friction slowdown
    hspd = lerp(hspd,hsp,frclerp);
}
//vspeed
depth = -y;
if abs(vsp) != 0{
    //if moving, speed buildup
    vspd = lerp(vspd,vsp,spdlerp);
}else{
    //if stopping, friction slowdown
    vspd = lerp(vspd,vsp,frclerp);
}
//hor collisions
if place_meeting(x+hspd,y,par_col){     //if collision at speed
    while(!place_meeting(x+sign(hspd),y,par_col)){  
        x+=sign(hspd);      //move to edge
    }
    hspd = 0;       //stop moving
}
x+=hspd;        //advance hspd
if place_meeting(x,y+vspd,par_col){     //if collision at speed
    while(!place_meeting(x,y+sign(vspd),par_col)){  
        y+=sign(vspd);      //move to edge
    }
    vspd = 0;       //stop moving
}
y+=vspd;        //advance vspd
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shoot
var idle = 0;
if (room == rm_lobby) &amp;&amp; (instance_exists(btn_joinGame)) &amp;&amp; ((btn_joinGame.active) || (btn_joinGame.cooldown&gt;0) || (btn_joinGame.guifade&gt;.1)){idle =1;}
if (room == rm_lobby) &amp;&amp; (instance_exists(btn_createServer)) &amp;&amp; ((btn_createServer.active) || (btn_createServer.cooldown&gt;0) || (btn_createServer.guifade&gt;.1)){idle = 1;}
gun_dir = point_direction(x+5*image_xscale,y-3,mouse_x,mouse_y);
//shooting
if mouse_check_button(mb_left) &amp;&amp; !idle &amp;&amp; !dead{
    shoot = 1;
}
//shoot timer
if (shoot) &amp;&amp; (alarm[0] = -1){
    if ammo&gt;=0{
        obj_view.shake+=2;
        //create bullet
        ammo--;
        var ofx = 5*image_xscale;
        var ofy = -3;
        ofx+=lengthdir_x(8,gun_dir);        //find gun position
        ofy+=lengthdir_y(8,gun_dir);        //find gun position
        var b = instance_create(x+ofx,y+ofy,weapon[gun,wp_ammotype]);
        b.dir = gun_dir;    //bullet direction
        b.spd = 5+hspd;     //bullet speed
        b.par = id;         //set self as identifiable parent
        //reset timer
        alarm[0] = weapon[gun,wp_speed];
    }else{
        shoot = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ammo
if place_meeting(x,y,obj_ammo) &amp;&amp; !dead{
    if ammo&lt;weapon[gun,wp_maxammo]{
        with(instance_nearest(x,y,obj_ammo)){
            instance_destroy();
        }
        ammo+=5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///damage
if instance_exists(obj_bullet){
    if place_meeting(x,y,obj_bullet){
        var b = instance_place(x,y,obj_bullet);
        if b.par!=id &amp;&amp; b.activ{
            hp--;
            obj_view.shake+=5;
            repeat(3){
                instance_create(x+irandom_range(-6,6),y+irandom_range(-4,4),obj_blood);
            }
            with(b){
                image_index = 0;
                instance_destroy();
                activ = 0;
            }
        }
    }
}
if instance_exists(obj_explosion){
    if place_meeting(x,y,obj_explosion){
        var e = instance_place(x,y,obj_explosion);
        //die
        hp-=10;
        //knockback
        hspd = sign(x-e.x)*irandom_range(4,7);
        vspd = sign(y-e.y)*irandom_range(4,7);
        ///blood
        repeat(6){
            instance_create(x+irandom_range(-6,6),y+irandom_range(-4,4),obj_blood);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///bleed out
if hp&lt;=1 &amp;&amp; (abs(hspd)&gt;0.5 || abs(vspd)&gt;0.5){
    var r = 5;
    if r = irandom(r){
        instance_create(x+irandom_range(-6,6),y+irandom_range(-6,6),obj_blood);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hp and death
if room== rm_lobby{
    hp = clamp(hp,0,100);
}else{
    hp = clamp(hp,0,100);
}
//dead
if hp&lt;=0 &amp;&amp; !dead{
    dead = 1;
}
//drops
if dead &amp;&amp; ammo&gt;0{
    ammo-=5;
    instance_create(x+irandom_range(-6,6),y+irandom_range(-6,6),obj_ammo);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animate
if !dead{
    if distance(x,y,xprevious,yprevious)&gt;.5{
        if sprite_index !=spr_hazmat_run{
            sprite_index = spr_hazmat_run;
            image_index = 1;
        }
        image_speed = .25;
    }else{
        sprite_index = spr_hazmat_idle;
    }
}else{
    sprite_index = spr_hazmat_dead;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///footprints
if sprite_index == spr_hazmat_run{
    if image_index mod 2 = 0{
        var dir = point_direction(xprevious,yprevious,x,y);
        var xx = ftat*2;
        var ft = instance_create(x+xx,y,obj_footprint);
        ft.image_angle = dir;
        ftat = -ftat;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw self
if hp&gt;0{
    //draw gun
    var ofx = 7*image_xscale;
    var ofy = -3;
    var inc_dir = 0; 
    if image_xscale&lt;0{inc_dir = 180}
    draw_sprite_ext(weapon[gun,wp_weapontype],0,x+ofx,y+ofy,image_xscale,image_yscale,gun_dir+inc_dir,c_white,image_alpha);
}
//self
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,image_alpha);
//aim
/*
ofx = 5*image_xscale;
ofy = -3;
ofx+=lengthdir_x(24,gun_dir);
ofy+=lengthdir_y(24,gun_dir);
draw_sprite_ext(spr_aim,0,x+ofx,y+ofy,.5,.5,gun_dir,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
